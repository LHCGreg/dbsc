//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TableWithSchemaSpecificationWithCustomSelectList.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace dbsc.Core.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class TableWithSchemaSpecificationWithCustomSelectListLexer : Lexer {
	public const int
		T__0=1, MS_UNENCLOSED_ID_NAME=2, MS_BRACKET_ENCLOSED_ID=3, PG_UNENCLOSED_ID_NAME=4, 
		PG_QUOTE_ENCLOSED_ID=5, WS_NO_NEWLINE=6, NEWLINE=7, LETTER=8, NUMBER=9, 
		WILDCARD=10, NEGATER=11, CUSTOM_SELECT=12;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'"
	};
	public static readonly string[] ruleNames = {
		"T__0", "MS_UNENCLOSED_ID_NAME", "MS_BRACKET_ENCLOSED_ID", "PG_UNENCLOSED_ID_NAME", 
		"PG_QUOTE_ENCLOSED_ID", "WS_NO_NEWLINE", "NEWLINE", "LETTER", "NUMBER", 
		"WILDCARD", "NEGATER", "CUSTOM_SELECT"
	};


		private IdentifierSyntax _flavor = IdentifierSyntax.SqlServer;
		public IdentifierSyntax Flavor { get { return _flavor; } set { _flavor = value; } }

		public TableWithSchemaSpecificationWithCustomSelectListLexer(ICharStream input, IdentifierSyntax flavor)
			: this (input)
		{
			Flavor = flavor;
		}


	public TableWithSchemaSpecificationWithCustomSelectListLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "TableWithSchemaSpecificationWithCustomSelectList.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 1 : return MS_UNENCLOSED_ID_NAME_sempred(_localctx, predIndex);

		case 2 : return MS_BRACKET_ENCLOSED_ID_sempred(_localctx, predIndex);

		case 3 : return PG_UNENCLOSED_ID_NAME_sempred(_localctx, predIndex);

		case 4 : return PG_QUOTE_ENCLOSED_ID_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool PG_QUOTE_ENCLOSED_ID_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return Flavor == IdentifierSyntax.Postgres;
		}
		return true;
	}
	private bool PG_UNENCLOSED_ID_NAME_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return Flavor == IdentifierSyntax.Postgres;
		}
		return true;
	}
	private bool MS_BRACKET_ENCLOSED_ID_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return Flavor == IdentifierSyntax.SqlServer;
		}
		return true;
	}
	private bool MS_UNENCLOSED_ID_NAME_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Flavor == IdentifierSyntax.SqlServer;
		}
		return true;
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\xEq\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x3\x2\x3\x2\x3\x3\x3\x3\x3"+
		"\x3\x5\x3!\n\x3\x3\x3\x3\x3\x3\x3\x3\x3\a\x3\'\n\x3\f\x3\xE\x3*\v\x3\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x6\x4\x32\n\x4\r\x4\xE\x4\x33\x3\x4"+
		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x5\x5<\n\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\a\x5\x43\n\x5\f\x5\xE\x5\x46\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x6\x6N\n\x6\r\x6\xE\x6O\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b"+
		"\x5\bZ\n\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r"+
		"\a\rh\n\r\f\r\xE\rk\v\r\x3\r\x6\rn\n\r\r\r\xE\ro\x2\x2\x2\xE\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x3\x2\t\x5\x2%%\x42\x42\x61\x61\x5\x2\f\f\xF"+
		"\xF^_\x5\x2\f\f\xF\xF$$\x4\x2\v\v\"\"\x5\x2\x43\\\x63|\x82\x101\x3\x2"+
		"\x32;\x4\x2\f\f\xF\xF\x84\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x3\x1B\x3\x2\x2\x2\x5 \x3\x2\x2\x2"+
		"\a-\x3\x2\x2\x2\t;\x3\x2\x2\x2\vI\x3\x2\x2\x2\rT\x3\x2\x2\x2\xFY\x3\x2"+
		"\x2\x2\x11]\x3\x2\x2\x2\x13_\x3\x2\x2\x2\x15\x61\x3\x2\x2\x2\x17\x63\x3"+
		"\x2\x2\x2\x19\x65\x3\x2\x2\x2\x1B\x1C\a\x30\x2\x2\x1C\x4\x3\x2\x2\x2\x1D"+
		"!\x5\x11\t\x2\x1E!\t\x2\x2\x2\x1F!\x5\x15\v\x2 \x1D\x3\x2\x2\x2 \x1E\x3"+
		"\x2\x2\x2 \x1F\x3\x2\x2\x2!(\x3\x2\x2\x2\"\'\x5\x11\t\x2#\'\x5\x13\n\x2"+
		"$\'\t\x2\x2\x2%\'\x5\x15\v\x2&\"\x3\x2\x2\x2&#\x3\x2\x2\x2&$\x3\x2\x2"+
		"\x2&%\x3\x2\x2\x2\'*\x3\x2\x2\x2(&\x3\x2\x2\x2()\x3\x2\x2\x2)+\x3\x2\x2"+
		"\x2*(\x3\x2\x2\x2+,\x6\x3\x2\x2,\x6\x3\x2\x2\x2-\x31\a]\x2\x2.\x32\n\x3"+
		"\x2\x2/\x30\a_\x2\x2\x30\x32\a_\x2\x2\x31.\x3\x2\x2\x2\x31/\x3\x2\x2\x2"+
		"\x32\x33\x3\x2\x2\x2\x33\x31\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2\x34\x35\x3"+
		"\x2\x2\x2\x35\x36\a_\x2\x2\x36\x37\x6\x4\x3\x2\x37\b\x3\x2\x2\x2\x38<"+
		"\x5\x11\t\x2\x39<\a\x61\x2\x2:<\x5\x15\v\x2;\x38\x3\x2\x2\x2;\x39\x3\x2"+
		"\x2\x2;:\x3\x2\x2\x2<\x44\x3\x2\x2\x2=\x43\x5\x11\t\x2>\x43\a\x61\x2\x2"+
		"?\x43\x5\x13\n\x2@\x43\a&\x2\x2\x41\x43\x5\x15\v\x2\x42=\x3\x2\x2\x2\x42"+
		">\x3\x2\x2\x2\x42?\x3\x2\x2\x2\x42@\x3\x2\x2\x2\x42\x41\x3\x2\x2\x2\x43"+
		"\x46\x3\x2\x2\x2\x44\x42\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45G\x3\x2\x2"+
		"\x2\x46\x44\x3\x2\x2\x2GH\x6\x5\x4\x2H\n\x3\x2\x2\x2IM\a$\x2\x2JN\n\x4"+
		"\x2\x2KL\a$\x2\x2LN\a$\x2\x2MJ\x3\x2\x2\x2MK\x3\x2\x2\x2NO\x3\x2\x2\x2"+
		"OM\x3\x2\x2\x2OP\x3\x2\x2\x2PQ\x3\x2\x2\x2QR\a$\x2\x2RS\x6\x6\x5\x2S\f"+
		"\x3\x2\x2\x2TU\t\x5\x2\x2UV\x3\x2\x2\x2VW\b\a\x2\x2W\xE\x3\x2\x2\x2XZ"+
		"\a\xF\x2\x2YX\x3\x2\x2\x2YZ\x3\x2\x2\x2Z[\x3\x2\x2\x2[\\\a\f\x2\x2\\\x10"+
		"\x3\x2\x2\x2]^\t\x6\x2\x2^\x12\x3\x2\x2\x2_`\t\a\x2\x2`\x14\x3\x2\x2\x2"+
		"\x61\x62\a,\x2\x2\x62\x16\x3\x2\x2\x2\x63\x64\a/\x2\x2\x64\x18\x3\x2\x2"+
		"\x2\x65i\a<\x2\x2\x66h\x5\r\a\x2g\x66\x3\x2\x2\x2hk\x3\x2\x2\x2ig\x3\x2"+
		"\x2\x2ij\x3\x2\x2\x2jm\x3\x2\x2\x2ki\x3\x2\x2\x2ln\n\b\x2\x2ml\x3\x2\x2"+
		"\x2no\x3\x2\x2\x2om\x3\x2\x2\x2op\x3\x2\x2\x2p\x1A\x3\x2\x2\x2\x10\x2"+
		" &(\x31\x33;\x42\x44MOYio\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace dbsc.Core.Antlr
