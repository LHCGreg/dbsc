//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TableWithSchemaSpecificationWithCustomSelectList.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace dbsc.Core.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class TableWithSchemaSpecificationWithCustomSelectListLexer : Lexer {
	public const int
		T__0=1, UNENCLOSED_ID_NAME=2, BRACKET_ENCLOSED_ID=3, WS_NO_NEWLINE=4, 
		NEWLINE=5, LETTER=6, NUMBER=7, WILDCARD=8, NEGATER=9, CUSTOM_SELECT=10;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'"
	};
	public static readonly string[] ruleNames = {
		"T__0", "UNENCLOSED_ID_NAME", "BRACKET_ENCLOSED_ID", "WS_NO_NEWLINE", 
		"NEWLINE", "LETTER", "NUMBER", "WILDCARD", "NEGATER", "CUSTOM_SELECT"
	};


	public TableWithSchemaSpecificationWithCustomSelectListLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "TableWithSchemaSpecificationWithCustomSelectList.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\fO\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x5\x3\x1D\n\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\a\x3#\n\x3\f\x3\xE\x3&\v\x3\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x6\x4-\n\x4\r\x4\xE\x4.\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x6\x5\x6\x38\n\x6\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3"+
		"\n\x3\v\x3\v\a\v\x46\n\v\f\v\xE\vI\v\v\x3\v\x6\vL\n\v\r\v\xE\vM\x2\x2"+
		"\x2\f\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n"+
		"\x13\x2\v\x15\x2\f\x3\x2\b\x5\x2%%\x42\x42\x61\x61\x6\x2\f\f\xF\xF,,^"+
		"_\x4\x2\v\v\"\"\x5\x2\x43\\\x63|\x82\x101\x3\x2\x32;\x4\x2\f\f\xF\xFZ"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x3\x17\x3\x2\x2\x2\x5\x1C\x3\x2"+
		"\x2\x2\a\'\x3\x2\x2\x2\t\x32\x3\x2\x2\x2\v\x37\x3\x2\x2\x2\r;\x3\x2\x2"+
		"\x2\xF=\x3\x2\x2\x2\x11?\x3\x2\x2\x2\x13\x41\x3\x2\x2\x2\x15\x43\x3\x2"+
		"\x2\x2\x17\x18\a\x30\x2\x2\x18\x4\x3\x2\x2\x2\x19\x1D\x5\r\a\x2\x1A\x1D"+
		"\t\x2\x2\x2\x1B\x1D\x5\x11\t\x2\x1C\x19\x3\x2\x2\x2\x1C\x1A\x3\x2\x2\x2"+
		"\x1C\x1B\x3\x2\x2\x2\x1D$\x3\x2\x2\x2\x1E#\x5\r\a\x2\x1F#\x5\xF\b\x2 "+
		"#\t\x2\x2\x2!#\x5\x11\t\x2\"\x1E\x3\x2\x2\x2\"\x1F\x3\x2\x2\x2\" \x3\x2"+
		"\x2\x2\"!\x3\x2\x2\x2#&\x3\x2\x2\x2$\"\x3\x2\x2\x2$%\x3\x2\x2\x2%\x6\x3"+
		"\x2\x2\x2&$\x3\x2\x2\x2\',\a]\x2\x2(-\n\x3\x2\x2)*\a_\x2\x2*-\a_\x2\x2"+
		"+-\x5\x11\t\x2,(\x3\x2\x2\x2,)\x3\x2\x2\x2,+\x3\x2\x2\x2-.\x3\x2\x2\x2"+
		".,\x3\x2\x2\x2./\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30\x31\a_\x2\x2\x31\b\x3"+
		"\x2\x2\x2\x32\x33\t\x4\x2\x2\x33\x34\x3\x2\x2\x2\x34\x35\b\x5\x2\x2\x35"+
		"\n\x3\x2\x2\x2\x36\x38\a\xF\x2\x2\x37\x36\x3\x2\x2\x2\x37\x38\x3\x2\x2"+
		"\x2\x38\x39\x3\x2\x2\x2\x39:\a\f\x2\x2:\f\x3\x2\x2\x2;<\t\x5\x2\x2<\xE"+
		"\x3\x2\x2\x2=>\t\x6\x2\x2>\x10\x3\x2\x2\x2?@\a,\x2\x2@\x12\x3\x2\x2\x2"+
		"\x41\x42\a/\x2\x2\x42\x14\x3\x2\x2\x2\x43G\a<\x2\x2\x44\x46\x5\t\x5\x2"+
		"\x45\x44\x3\x2\x2\x2\x46I\x3\x2\x2\x2G\x45\x3\x2\x2\x2GH\x3\x2\x2\x2H"+
		"K\x3\x2\x2\x2IG\x3\x2\x2\x2JL\n\a\x2\x2KJ\x3\x2\x2\x2LM\x3\x2\x2\x2MK"+
		"\x3\x2\x2\x2MN\x3\x2\x2\x2N\x16\x3\x2\x2\x2\v\x2\x1C\"$,.\x37GM\x3\b\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace dbsc.Core.Antlr
